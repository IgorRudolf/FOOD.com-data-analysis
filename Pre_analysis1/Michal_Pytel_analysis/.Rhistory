View(pickle_data)
Recipies_PP <- read.csv("Data\\PP_recipes.csv")
Users_PP <- read.csv("Data\\PP_users.csv")
View(Recipies_PP)
View(Interactions_Raw)
View(Recipies_Raw)
glimpse(Recipies_Raw)
recipies <- Recipies_Raw %>%
mutate(tags = gsub("[\\[\\]']", "", tags),  # Remove square brackets and single quotes
tags= strsplit(tags, ", "))
View(recipies)
?gsub
glimpse(recipies)
Recipes_Raw <- read.csv("Data\\RAW_recipes.csv")
Recipes_PP <- read.csv("Data\\PP_recipes.csv")
View(Recipies_PP)
View(Recipies_PP)
View(Recipies_PP)
# source_python("read_pickle.py")
pickle_data <- read_pickle_file("Data\\ingr_map.pkl")
library("dplyr")
# install.packages('reticulate')
library("reticulate")
source_python("read_pickle.py")
pickle_data <- read_pickle_file("Data\\ingr_map.pkl")
Interactions_Raw <- read.csv('Data\\Raw_interactions.csv')
Recipes_Raw <- read.csv("Data\\RAW_recipes.csv")
Recipes_PP <- read.csv("Data\\PP_recipes.csv")
Users_PP <- read.csv("Data\\PP_users.csv")
View(Recipes_Raw)
recipes <- Recipes_Raw %>%
mutate(column_name = gsub("[\\[\\]]", "", column_name),  # Remove square brackets
column_name = strsplit(column_name, ", "))
recipes <- Recipes_Raw %>%
mutate(tags = gsub("[\\[\\]]", "", tags),  # Remove square brackets
tags = strsplit(tags ", "))
recipes <- Recipes_Raw %>%
mutate(tags = gsub("[\\[\\]]", "", tags), tags = strsplit(tags, ", "))
View(recipes)
recipes <- Recipes_Raw %>%
mutate(tags = gsub("[\\[\\]]", "", tags))
recipes <- Recipes_Raw %>%
sd
recipes <- Recipes_Raw %>%
mutate(tags = gsub("[\\[\\]]", "", tags))
library(stringr)
recipes <- Recipes_Raw %>%
mutate(tags = str_replace_all(tags "\\[|\\]", ""),  # Remove square brackets
recipes <- Recipes_Raw %>%
mutate(tags = str_replace_all(tags, "\\[|\\]", ""),  # Remove square brackets
tags = strsplit(tags, ", "))
recipes <- Recipes_Raw %>%
separate_longer_delim(nutrition, delim = ", ")
library(tidyr)
recipes <- Recipes_Raw %>%
separate_longer_delim(nutrition, delim = ", ")
recipes <- Recipes_Raw %>%
mutate(
calories = as.numeric(gsub(".*\\[|,.*", "", nutrition)),
total_fat = as.numeric(gsub(".*?, |,.*", "", nutrition)),
sugar = as.numeric(gsub(".*?, |,.*", "", nutrition, fixed = TRUE)[2]),
sodium = as.numeric(gsub(".*?, |,.*", "", nutrition, fixed = TRUE)[3]),
protein = as.numeric(gsub(".*?, |,.*", "", nutrition, fixed = TRUE)[4]),
saturated_fat = as.numeric(gsub(".*?, |,.*", "", nutrition, fixed = TRUE)[5])
)
recipes <- Recipes_Raw %>%
mutate(
total_fat = as.numeric(gsub(".*?, (.*?),.*", "\\1", nutrition)),
sugar = as.numeric(gsub(".*?, (.*?),.*", "\\1", nutrition)),
sodium = as.numeric(gsub(".*?, (.*?),.*", "\\1", nutrition)),
protein = as.numeric(gsub(".*?, (.*?),.*", "\\1", nutrition)),
saturated_fat = as.numeric(gsub(".*?, (.*?),\\]", "\\1", nutrition))
)
recipes <- Recipes_Raw %>%
mutate(
calories = as.numeric(gsub("\\[(.*?),.*", "\\1", nutrition)),
total_fat = as.numeric(gsub(".*?, (.*?),.*", "\\1", nutrition)),
sugar = as.numeric(gsub(".*?, (.*?),.*", "\\1", nutrition)),
sodium = as.numeric(gsub(".*?, (.*?),.*", "\\1", nutrition)),
protein = as.numeric(gsub(".*?, (.*?),.*", "\\1", nutrition)),
saturated_fat = as.numeric(gsub(".*?, (.*?),\\]", "\\1", nutrition))
)
recipes <- Recipes_Raw %>%
mutate(
nutrition = gsub("\\[|\\]", "", nutrition),  # Remove brackets
nutrition = gsub(" ", "", nutrition),  # Remove spaces
nutrients = strsplit(nutrition, ","),  # Split into individual nutrient values
calories = as.numeric(nutrients[[1]]),
total_fat = as.numeric(nutrients[[2]]),
sugar = as.numeric(nutrients[[3]]),
sodium = as.numeric(nutrients[[4]]),
protein = as.numeric(nutrients[[5]]),
saturated_fat = as.numeric(nutrients[[6]])
)
recipes <- Recipes_Raw %>%
mutate(
nutrition = gsub("\\[|\\]", "", nutrition),  # Remove brackets
nutrition = gsub(" ", "", nutrition),  # Remove spaces
nutrients = strsplit(nutrition, ","),  # Split into individual nutrient values
calories = as.numeric(nutrients[[1]]),
total_fat = as.numeric(nutrients[[2]]),
sugar = as.numeric(nutrients[[3]]),
sodium = as.numeric(nutrients[[4]]),
protein = as.numeric(nutrients[[5]]),
saturated_fat = as.numeric(nutrients[[6]])
)
# Define a function to extract nutrients and create a new data frame
extract_nutrients <- function(nutrition) {
nutrition <- gsub("\\[|\\]", "", nutrition)  # Remove brackets
nutrition <- gsub(" ", "", nutrition)  # Remove spaces
nutrients <- unlist(strsplit(nutrition, ","))  # Split into individual nutrient values
return(data.frame(
calories = as.numeric(nutrients[1]),
total_fat = as.numeric(nutrients[2]),
sugar = as.numeric(nutrients[3]),
sodium = as.numeric(nutrients[4]),
protein = as.numeric(nutrients[5]),
saturated_fat = as.numeric(nutrients[6])
))
}
recipes <- bind_rows(lapply(Recipes_Raw$nutrition, extract_nutrients))
View(recipes)
recipes <- Recipes_Raw %>%
mutate(
nutrition = gsub("\\[|\\]", "", nutrition),  # Remove brackets
nutrition = gsub(" ", "", nutrition),  # Remove spaces
nutrients <- unlist(strsplit(nutrition, ",")),  # Split into individual nutrient values
calories = as.numeric(nutrients[1]),
total_fat = as.numeric(nutrients[2]),
sugar = as.numeric(nutrients[3]),
sodium = as.numeric(nutrients[4]),
protein = as.numeric(nutrients[5]),
saturated_fat = as.numeric(nutrients[6])
)
# Define a function to extract nutrients and create a new data frame
extract_nutrients <- function(nutrition) {
nutrition <- gsub("\\[|\\]", "", nutrition)  # Remove brackets
nutrition <- gsub(" ", "", nutrition)  # Remove spaces
nutrients <- unlist(strsplit(nutrition, ","))  # Split into individual nutrient values
return(data.frame(
id,
calories = as.numeric(nutrients[1]),
total_fat = as.numeric(nutrients[2]),
sugar = as.numeric(nutrients[3]),
sodium = as.numeric(nutrients[4]),
protein = as.numeric(nutrients[5]),
saturated_fat = as.numeric(nutrients[6])
))
}
recipes <- bind_rows(lapply(Recipes_Raw$nutrition, extract_nutrients))
# Define a function to extract nutrients and create a new data frame
extract_nutrients <- function(nutrition) {
nutrition <- gsub("\\[|\\]", "", nutrition)  # Remove brackets
nutrition <- gsub(" ", "", nutrition)  # Remove spaces
nutrients <- unlist(strsplit(nutrition, ","))  # Split into individual nutrient values
return(data.frame(
id,
calories = as.numeric(nutrients[1]),
total_fat = as.numeric(nutrients[2]),
sugar = as.numeric(nutrients[3]),
sodium = as.numeric(nutrients[4]),
protein = as.numeric(nutrients[5]),
saturated_fat = as.numeric(nutrients[6])
))
}
recipes <- bind_rows(lapply(Recipes_Raw$nutrition, extract_nutrients))
# Define a function to extract nutrients and create a new data frame
extract_nutrients <- function(nutrition) {
nutrition <- gsub("\\[|\\]", "", nutrition)  # Remove brackets
nutrition <- gsub(" ", "", nutrition)  # Remove spaces
nutrients <- unlist(strsplit(nutrition, ","))  # Split into individual nutrient values
return(data.frame(
calories = as.numeric(nutrients[1]),
total_fat = as.numeric(nutrients[2]),
sugar = as.numeric(nutrients[3]),
sodium = as.numeric(nutrients[4]),
protein = as.numeric(nutrients[5]),
saturated_fat = as.numeric(nutrients[6])
))
}
recipes <- bind_rows(lapply(Recipes_Raw$nutrition, extract_nutrients))
extract_nutrients <- function(nutrition) {
nutrition <- gsub("\\[|\\]", "", nutrition)  # Remove brackets
nutrition <- gsub(" ", "", nutrition)  # Remove spaces
nutrients <- unlist(strsplit(nutrition, ","))  # Split into individual nutrient values
nutrient_list <- list(
calories = as.numeric(nutrients[1]),
total_fat = as.numeric(nutrients[2]),
sugar = as.numeric(nutrients[3]),
sodium = as.numeric(nutrients[4]),
protein = as.numeric(nutrients[5]),
saturated_fat = as.numeric(nutrients[6])
)
return(nutrient_list)
}
recipes <- Recipes_Raw %>%
rowwise() %>%
mutate(nutrients = list(extract_nutrients(nutrition))) %>%
unnest(nutrients)
recipes <- Recipes_Raw %>%
mutate(
nutrition = gsub("\\[|\\]", "", nutrition),  # Remove brackets
nutrition = gsub(" ", "", nutrition),  # Remove spaces
nutrients = unlist(strsplit(nutrition, ",")),  # Split into individual nutrient values
calories = as.numeric(nutrients[1]),
total_fat = as.numeric(nutrients[2]),
sugar = as.numeric(nutrients[3]),
sodium = as.numeric(nutrients[4]),
protein = as.numeric(nutrients[5]),
saturated_fat = as.numeric(nutrients[6])
)
recipes <- Recipes_Raw %>%
mutate(
nutrition = gsub("\\[|\\]", "", nutrition),  # Remove brackets
nutrition = gsub(" ", "", nutrition),  # Remove spaces
)
recipes <- Recipes_Raw %>%
mutate(
nutrition = gsub("\\[|\\]", "", nutrition),  # Remove brackets
nutrition = gsub(" ", "", nutrition),  # Remove spaces
nutrition = as.numeric(unlist(strsplit(input_string, ",")))
)
recipes <- Recipes_Raw %>%
mutate(
nutrition = gsub("\\[|\\]", "", nutrition),  # Remove brackets
nutrition = gsub(" ", "", nutrition),  # Remove spaces
nutrition = as.numeric(unlist(strsplit(nutrition, ",")))
)
recipes <- Recipes_Raw%>%
mutate(
nutrition = gsub("\\[|\\]", "", nutrition),  # Remove brackets
nutrition = gsub(" ", "", nutrition),  # Remove spaces
nutrients = strsplit(nutrition, ","),  # Split into individual nutrient values
calories = as.numeric(nutrients[[1]]),
total_fat = as.numeric(nutrients[[2]]),
sugar = as.numeric(nutrients[[3]]),
sodium = as.numeric(nutrients[[4]]),
protein = as.numeric(nutrients[[5]]),
saturated_fat = as.numeric(nutrients[[6]])
)
recipes <- Recipes_Raw%>%
mutate(
nutrition = gsub("\\[|\\]", "", nutrition),  # Remove brackets
nutrition = gsub(" ", "", nutrition),  # Remove spaces
nutrients = strsplit(nutrition, ","),  # Split into individual nutrient values
calories = as.numeric(sapply(nutrients, function(x) as.numeric(x[1]))),
total_fat = as.numeric(sapply(nutrients, function(x) as.numeric(x[2]))),
sugar = as.numeric(sapply(nutrients, function(x) as.numeric(x[3]))),
sodium = as.numeric(sapply(nutrients, function(x) as.numeric(x[4]))),
protein = as.numeric(sapply(nutrients, function(x) as.numeric(x[5]))),
saturated_fat = as.numeric(sapply(nutrients, function(x) as.numeric(x[6])))
)
glimpse(recipes)
recipes <- Recipes_Raw %>%
mutate(
nutrition = gsub("\\[|\\]", "", nutrition),  # Remove brackets
nutrition = gsub(" ", "", nutrition),  # Remove spaces
nutrients = strsplit(nutrition, ","),  # Split into individual nutrient values
calories = as.numeric(sapply(nutrients, function(x) as.numeric(x[1]))),
total_fat = as.numeric(sapply(nutrients, function(x) as.numeric(x[2]))),
sugar = as.numeric(sapply(nutrients, function(x) as.numeric(x[3]))),
sodium = as.numeric(sapply(nutrients, function(x) as.numeric(x[4]))),
protein = as.numeric(sapply(nutrients, function(x) as.numeric(x[5]))),
saturated_fat = as.numeric(sapply(nutrients, function(x) as.numeric(x[6])))
) %>%
arrange(desc(calories/minutes))
first_analysis <- recipes %>%
filter(minutes != 0) %>%
arrange(desc(calories/minutes))
View(first_analysis)
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(artist.s._name, delim = ", ")
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ")
View(analiza1)
View(analiza1)
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n())
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n()) %>%
arrange(-n) %>%
head(20)
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n()) %>%
arrange(-n) %>%
head(20) %>%
ggplot(aes(x = tags))+
geom_histogram()
library(ggplot2)
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n()) %>%
arrange(-n) %>%
head(20) %>%
ggplot(aes(x = tags))+
geom_histogram()
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n()) %>%
arrange(-n) %>%
head(20)
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n()) %>%
arrange(-n) %>%
head(20) %>%
ggplot(aes(x = tags))+
geom_boxplot()
library(SmarterPoland)
ggplot(countries, aes(x = population)) +
geom_histogram(binwidth = 500000)
# Łączenie przez pipes %>% (skrót Ctrl + Shift + m)
countries %>%
filter(continent == 'Europe') %>%
ggplot(mapping = aes(x = birth.rate, y = death.rate)) +
geom_point()
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n()) %>%
arrange(-n) %>%
head(20) %>%
ggplot(aes(x = tags, y = n))+
geom_boxplot()
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n()) %>%
arrange(-n) %>%
head(20) %>%
ggplot(aes(x = tags, y = n))+
geom_boxplot()
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n()) %>%
arrange(-n) %>%
head(20) %>%
ggplot(aes(x = tags, y = n))+
geom_barplot()
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n()) %>%
arrange(-n) %>%
head(20) %>%
ggplot(aes(x = tags, y = n))+
geom_bar()
View(analiza1)
View(analiza1)
View(analiza1)
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n()) %>%
arrange(-n) %>%
head(20)
ggplot(analiza1, aes(x = tags, y = n))+
geom_bar(stat = "identity", fill = "blue")
ggplot(recipes, aes(x = calories, y = protein)) +
geom_point()
recipes %>%
filter(calories < 1500) %>%
ggplot(recipes, aes(x = calories, y = protein)) +
geom_point()
recipes %>%
filter(calories < 1500) %>%
ggplot(aes(x = calories, y = protein)) +
geom_point()
recipes %>%
filter(calories < 1500) %>%
ggplot(aes(x = time, y = protein)) +
geom_point()
recipes %>%
filter(calories < 1500) %>%
ggplot(aes(x = minutes, y = protein)) +
geom_point()
recipes %>%
filter(calories < 1500) %>%
filter(minutes < 120) %>%
ggplot(aes(x = minutes, y = protein)) +
geom_point()
recipes %>%
filter(calories < 1500) %>%
filter(minutes < 120) %>%
ggplot(aes(x = minutes, y = protein)) +
geom_density()
recipes %>%
filter(calories < 1500) %>%
filter(minutes < 120) %>%
ggplot(aes(x = minutes)) +
geom_density()
recipes %>%
filter(calories < 2000) %>%
filter(minutes < 120) %>%
ggplot(aes(x = minutes)) +
geom_density()
recipes %>%
filter(calories < 1500) %>%
filter(minutes < 120) %>%
ggplot(aes(x = minutes, y = protein)) +
geom_point()
recipes %>%
filter(calories < 2000) %>%
filter(minutes < 120) %>%
ggplot(aes(x = calories)) +
geom_density()
recipes %>%
filter(calories < 2000) %>%
filter(minutes < 120) %>%
ggplot(aes(x = calories)) +
geom_density(adjust = 10)
recipes %>%
filter(calories < 2000) %>%
filter(minutes < 120) %>%
ggplot(aes(x = calories)) +
geom_density(adjust = 1/2)
recipes %>%
filter(calories < 2000) %>%
filter(minutes < 120) %>%
ggplot(aes(x = calories)) +
geom_density()
recipes %>%
filter(calories < 2000) %>%
filter(minutes < 120) %>%
ggplot(aes(x = minutes)) +
geom_density()
recipes %>%
filter(calories < 1500) %>%
filter(minutes < 120) %>%
ggplot(aes(x = minutes, y = protein)) +
geom_point()
View(Recipes_Raw)
analiza1 <- Recipes_Raw %>%
mutate(
tags = gsub("\\[|\\]", "", tags)
) %>%
separate_longer_delim(tags, delim = ", ") %>%
group_by(tags) %>%
summarize(n = n()) %>%
arrange(-n) %>%
head(20)
View(analiza1)
View(analiza1)
recipes %>%
filter(calories < 2000) %>%
filter(minutes < 120) %>%
ggplot(aes(x = minutes)) +
geom_density()
recipes %>%
filter(calories < 2000) %>%
filter(minutes < 120) %>%
ggplot(aes(x = calories)) +
geom_density()
recipes %>%
filter(calories < 1500) %>%
filter(minutes < 120) %>%
ggplot(aes(x = minutes, y = protein)) +
geom_point()
recipes %>%
filter(calories < 1500) %>%
filter(minutes < 120) %>%
ggplot(aes(x = minutes, y = protein)) +
geom_point()
